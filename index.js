var i=new Map;function a(e,t){let n=t;return function(){let r=()=>{n=null,e.apply(this,arguments)};n&&cancelAnimationFrame(n),n=requestAnimationFrame(r)}}function f(e,t){typeof e.onenter=="function"&&t.onenter.add(e.onenter),typeof e.onexit=="function"&&t.onexit.add(e.onexit),typeof e.onresize=="function"&&t.onresize.add(e.onresize),typeof e.oninit=="function"&&t.onresize.add(e.oninit)}function v(e){let t=e.query||"all",n={id:e.id,query:t,active:!1,test:matchMedia(t),onenter:new Set,onexit:new Set,onresize:new Set,oninit:new Set};f(e,n);let r=()=>{n.oninit.size>0&&(n.oninit.forEach(o=>o()),n.oninit.clear()),n.onenter.forEach(o=>o()),n.active=!0},s=()=>{n.onexit.forEach(o=>o()),n.active=!1},u=o=>n.onresize.forEach(p=>p(o));n.test.matches&&r();let c=({matches:o})=>o?r():s(),l=()=>n.test.removeListener(c);return n.test.addListener(c),{onenter:r,onexit:s,onresize:u,destroy:l,get screen(){return n}}}var w=e=>{if(Array.isArray(e))return e.forEach(w);if(!("id"in e))throw new Error('qvp: Missing an "id" reference');let t=v(e),{id:n}=t.screen;i.size||addEventListener("resize",a(()=>{i.forEach(r=>{r.screen.active&&r.onresize(window.innerWidth)})},25),!0),i.has(n)?console.warn(`qvp: The id "${n}" is already defined, use qvp.add() instead.`):i.set(n,t)},d=e=>i.has(e)?i.get(e):!1,y=(e,t)=>{let n=d(e);if(n===!1)return console.error(`qvp: There is no viewport using an id of "${e}"`);f(t,n.screen),n.screen.test.matches&&n.onenter()},m=e=>{let t=Array.from(i.values()).map(({screen:n})=>n);return e?t.filter(({id:n})=>e.includes(n)):t},h=e=>{let t=m();if(e){let r=d(e);return r?r.screen.active:!1}let n=t.filter(({active:r})=>r===!0);return n.length>1?n:n[0]},g=e=>{i.has(e)&&(i.get(e).destroy(),i.delete(e))},x=()=>{removeEventListener("resize",a()),i.forEach(e=>e.destroy()),i.clear()};export{h as active,y as add,x as destroy,d as get,m as list,g as remove,w as screens,i as viewports};
