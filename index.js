var i=new Map;function c(t,e){let n=e;return function(){let r=()=>{n=null,t.apply(this,arguments)};n&&cancelAnimationFrame(n),n=requestAnimationFrame(r)}}function a(t,e){typeof t.onenter=="function"&&e.onenter.add(t.onenter),typeof t.onexit=="function"&&e.onexit.add(t.onexit),typeof t.onresize=="function"&&e.onresize.add(t.onresize),typeof t.oninit=="function"&&e.onresize.add(t.oninit)}function p(t){let e=Object.create(null);e.id=t.id,e.query=t.query||"all",e.active=!1,e.test=matchMedia(e.query),e.onenter=new Set,e.onexit=new Set,e.onresize=new Set,e.oninit=new Set,a(t,e);let n=()=>{e.oninit.size>0&&(e.oninit.forEach(o=>o()),e.oninit.clear()),e.onenter.forEach(o=>o()),e.active=!0},r=()=>{e.onexit.forEach(o=>o()),e.active=!1},u=o=>e.onresize.forEach(l=>l(o));e.test.matches&&n();let s=({matches:o})=>o?n():r(),d=()=>e.test.removeListener(s);return e.test.addListener(s),{onenter:n,onexit:r,onresize:u,destroy:d,get screen(){return e}}}var w=t=>{if(Array.isArray(t))return t.forEach(w);if(!("id"in t))throw new Error('viewports: Missing an "id" reference');let e=p(t),{id:n}=e.screen;i.size||addEventListener("resize",c(()=>{i.forEach(r=>{r.screen.active&&r.onresize(window.innerWidth)})},25),!0),i.has(n)?console.warn(`viewports: The id "${n}" is already defined, use viewports.add() instead.`):i.set(n,e)},f=t=>i.has(t)?i.get(t):!1,h=(t,e)=>{let n=f(t);if(n===!1)return console.error(`viewports: There is no viewport using id "${t}"`);a(e,n.screen),n.screen.test.matches&&n.onenter()},m=t=>{let e=Array.from(i.values()).map(({screen:n})=>n);return t?e.filter(({id:n})=>t.includes(n)):e},y=t=>{let e=m();if(t){let r=f(t);return r?r.screen.active:!1}let n=e.filter(({active:r})=>r===!0);return n.length>1?n:n[0]},v=t=>{i.has(t)&&(i.get(t).destroy(),i.delete(t))},g=()=>{removeEventListener("resize",c()),i.forEach(t=>t.destroy()),i.clear()};export{y as active,h as add,g as destroy,f as get,m as list,v as remove,w as screens,i as viewports};
