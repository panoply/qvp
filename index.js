var r=new Map;function f(e,n){let t=n;return function(){let i=()=>{t=null,e.apply(this,arguments)};t&&cancelAnimationFrame(t),t=requestAnimationFrame(i)}}function u(e,n){typeof e.onenter=="function"&&n.onenter.add(e.onenter),typeof e.onexit=="function"&&n.onexit.add(e.onexit),typeof e.onresize=="function"&&n.onresize.add(e.onresize),typeof e.oninit=="function"&&n.oninit.add(e.oninit)}function m(e){let n=e.query||"all",t={id:e.id,query:n,active:!1,test:matchMedia(n),onenter:new Set,onexit:new Set,onresize:new Set,oninit:new Set};u(e,t);let i=()=>{t.oninit.size>0&&(t.oninit.forEach(o=>o()),t.oninit.clear()),t.onenter.forEach(o=>o()),t.active=!0},c=()=>{t.onexit.forEach(o=>o()),t.active=!1},p=o=>t.onresize.forEach(v=>v(o));t.test.matches&&i();let a=({matches:o})=>o?i():c(),l=()=>t.test.removeListener(a);return t.test.addListener(a),{onenter:i,onexit:c,onresize:p,destroy:l,get screen(){return t}}}var w=e=>{if(Array.isArray(e))return e.forEach(w);if(!("id"in e))throw new Error('qvp: Missing an "id" reference');let n=m(e),{id:t}=n.screen;r.size||addEventListener("resize",f(()=>{r.forEach(i=>{i.screen.active&&i.onresize(window.innerWidth)})},25),!0),r.has(t)?console.warn(`qvp: The id "${t}" is already defined, use qvp.add() instead.`):r.set(t,n)},d=e=>r.has(e)?r.get(e):!1,g=(e,n)=>{let t=d(e);if(t===!1)return console.error(`qvp: There is no viewport using an id of "${e}"`);u(n,t.screen),t.screen.test.matches&&t.onenter()},y=e=>{let n=Array.from(r.values()).map(({screen:t})=>t);return e?n.filter(({id:t})=>e.includes(t)):n},s=e=>{let n=y();if(e){let i=d(e);return i?i.screen.active:!1}let t=n.filter(({active:i})=>i===!0);return t.length>1?t:t[0]},h=(e,n=",")=>typeof e=="string"?e.indexOf(n)>-1?e.split(n).some(s):!!s(e):e.some(s),x=e=>{r.has(e)&&(r.get(e).destroy(),r.delete(e))},z=()=>{removeEventListener("resize",f()),r.forEach(e=>e.destroy()),r.clear()};export{s as active,g as add,z as destroy,d as get,y as list,x as remove,w as screens,h as test,r as viewports};
